#!/bin/bash

R="$(printf '\033[1;31m')"
G="$(printf '\033[1;32m')"
Y="$(printf '\033[1;33m')"
W="$(printf '\033[1;37m')"
C="$(printf '\033[1;36m')"

user=$(whoami)

function banner() {
clear
printf "\033[33m  █▄▀ ▄▀█ █░░ █ \033[0m\n"
printf "\033[36m  █░█ █▀█ █▄▄ █  \033[0m\n"

}

function setup_vnc_pass() {
    echo "${G}Create Your VNC Password"${W}
    vncstart
    sleep 60
    check-up
    vncstop
}

function check-up() {
if ps -ef | grep -v grep | grep vncserver > /dev/null
then
    echo "${G}vncserver is running"${W}
    sleep 1.2
    clear
    echo "${G}Starting please wait ......."${W}
    sleep 1.2
    clear
else
    echo "${R}vncserver is not running. Exiting......"${W}
	sleep 1
    exit 0
fi
}

function setup_plank() {
	banner
	gsettings set net.launchpad.plank.dock.settings:/net/launchpad/plank/docks/dock1/ theme 'Gtk+'
	gsettings set net.launchpad.plank.dock.settings:/net/launchpad/plank/docks/dock1/ zoom-enabled true
}

function zsh_setup() {
	sudo apt install zsh zsh-autosuggestions zsh-syntax-highlighting -y
    cp /etc/skel/.zshrc ~/
    sudo chsh -s $(which zsh) $(whoami)
}

function ask_theme() {
read -p "${G}Do you want to setup MacOS themes? (y/n) "${w} ask_macos_theme

if [ "$ask_macos_theme" == "y" ]; then
	macos_theme
else
    echo "${C}Canceling...."${W}
    sleep 1.5
fi
}

function macos_theme() {
	banner
	git clone --depth=1 https://github.com/vinceliuice/WhiteSur-gtk-theme /home/${user}/WhiteSur-gtk-theme
	sudo chmod +x /home/${user}/WhiteSur-gtk-theme/install.sh
        sudo bash /home/${user}/WhiteSur-gtk-theme/install.sh
#dbus-launch xfconf-query -c xfce4-desktop -np '/desktop-icons/style' -t 'int' -s '0'
#sleep 1
#dbus-launch xfconf-query -c xsettings -p /Net/ThemeName -s "WhiteSur-Light"
}

function app_menu() {
	banner
	sudo apt install rofi -y
	sudo apt install wget -y
	mkdir -p ~/.config/rofi
        rofi -dump-config > ~/.config/rofi/config.rasi
	cd ~
	wget https://raw.githubusercontent.com/sabamdarif/kali-proot/main/image/application-menu.png
	wget https://raw.githubusercontent.com/sabamdarif/kali-proot/main/setup/style.rasi
	mv style.rasi application-menu.png ~/.config/rofi
cat <<EOF > "/home/${user}/.config/rofi/launcher.sh"
#!/usr/bin/env bash

	## Run
	rofi \
    -show drun \
    -theme /home/${user}/.config/rofi/style.rasi
EOF
cat <<EOF > "appsearch.desktop"
[Desktop Entry]
Name=Application Search
Exec=bash /home/${user}/.config/rofi/launcher.sh
Icon=/home/${user}/.config/rofi/application-menu.png
Type=Application
Terminal=false
StartupNotify=false
EOF
mkdir ~/.local/share/applications
if [[ ! -d "~/.local/share/applications" ]]; then
    mkdir ~/.local/share/applications
fi
mv appsearch.desktop ~/.local/share/applications/
chmod +x ~/.local/share/applications/appsearch.desktop
config_folder="/home/${user}/.config"
plank_folder="${config_folder}/plank"
dock_folder="${plank_folder}/dock1"
launchers_folder="${dock_folder}/launchers"
if [ ! -d "${config_folder}" ]; then
    mkdir -p "${config_folder}"
fi

if [ ! -d "${plank_folder}" ]; then
    mkdir -p "${plank_folder}"
fi

if [ ! -d "${dock_folder}" ]; then
    mkdir -p "${dock_folder}"
fi

if [ ! -d "${launchers_folder}" ]; then
    mkdir -p "${launchers_folder}"
fi
cd ~
cat <<EOF > appsearch.dockitem
[PlankDockItemPreferences]
Launcher=file:///home/${user}/.local/share/applications/appsearch.desktop
EOF
mv appsearch.dockitem ~/.config/plank/dock1/launchers
clear
killall plank
}

function ask_edex() {
read -p "${G}Do you to install EdexUi(Hollywood Style Terminal)? (y/n) "${w} ask_edex_terminal

if [ "$ask_edex_terminal" == "y" ]; then
	setup_edex
else
    echo "${C}Canceling...."${W}
    sleep 1.5
fi
}

function setup_edex() {
	banner
	cd ~
        wget https://github.com/GitSquared/edex-ui/releases/download/v2.2.8/eDEX-UI-Linux-arm64.AppImage
	wget https://raw.githubusercontent.com/sabamdarif/kali-proot/main/image/edex_ui.png
	mv eDEX-UI-Linux-arm64.AppImage /home/${user}/.local/share/applications/
	mv edex_ui.png /home/${user}/.local/share/applications/
	    cat <<EOF > "/home/${user}/.local/share/applications/edex-ui.desktop"
[Desktop Entry]
Name=Edex Ui
Exec="/home/${user}/.local/share/applications/eDEX-UI-Linux-arm64.AppImage"
Icon=/home/${user}/.local/share/applications/edex_ui.png
Type=Application
Terminal=true
StartupNotify=false 
EOF
	chmod +x /home/${user}/.local/share/applications/edex-ui.desktop
}

function finish_setup() {
#     sleep 10
# dbus-launch xfconf-query -c xfce4-desktop -np '/desktop-icons/style' -t 'int' -s '0'
sleep 10
dbus-launch xfconf-query -c xsettings -p /Net/ThemeName -s "WhiteSur-Light"
sleep 10
dbus-launch xfconf-query -c xfwm4 -p /general/theme -s "WhiteSur-Light"
sleep 10
dbus-launch xfconf-query -c xfwm4 -p /general/show_dock_shadow -s false
sleep 10
rm customuze-my-desktop
}

function clean_up() {
     rm -rf /home/${user}/WhiteSur-icon-theme WhiteSur-gtk-theme
      clear
    echo "${C}SUCCESFULL"${W}
    echo "${C}Now Exit Kali And Restart Termux"${W}
}

setup_vnc_pass
ask_theme
zsh_setup
app_menu
setup_plank
ask_edex
clean_up
